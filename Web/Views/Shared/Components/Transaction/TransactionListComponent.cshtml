@using Application
@using Application.Helpers
@using Domain.Enum.Transeation
@model List<Domain.ViewModel.Transaction.TransactionViewModel>

<div class="col-md-3">
    <div class="alert alert-primary" role="alert">
        @if (Model.Any())
        {
            <h4>موجودی فعلی: @Model.First().TotalPrice?.ToString("#,0") تومان</h4>
        }
    </div>
</div>

<div class="text-center">
    <div class="col-md-12 stretch-card">
        <div class="card-body">
            <div class="pagination">
                @if (ViewBag.TotalPages > 1)
                {
                    <nav aria-label="Page navigation">
                        <ul class="pagination justify-content-center">
                            @for (int i = 1; i <= ViewBag.TotalPages; i++)
                            {
                                <li class="page-item @(ViewBag.CurrentPage == i ? "active" : "")">
                                    <a class="page-link" href="?page=@i">@i</a>
                                </li>
                            }
                        </ul>
                    </nav>
                }
            </div>

            <div class="card">
                <div class="card-body">
                    
                    <form id="tokenForm" method="post">
                        @Html.AntiForgeryToken()
                    </form>

                    <div class="table-responsive">
                        <div class="row">
                            <div class="row mb-3">
                                <div class="col-md-3">
                                    <select class="form-select" id="filterStatus" onchange="filterTransactions()">
                                        <option value="all">همه تراکنش‌ها</option>
                                        <option value="confirmed">فقط تایید شده‌ها</option>
                                        <option value="unconfirmed">فقط تایید نشده‌ها</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                        <hr/>
                        <table class="table table-hover mb-0">
                            <thead>
                            <tr>
                                <th class="pt-0">نوع تراکنش</th>
                                <th class="pt-0">تاریخ تراکنش</th>
                                <th class="pt-0">زمان ایجاد</th>
                                <th class="pt-0">مبلغ تراکنش</th>
                                <th class="pt-0">توضیحات</th>
                                <th class="pt-0">دستورات</th>
                            </tr>
                            </thead>
                            <tbody>
                            @foreach (var item in Model)
                            {
                                <tr class="transaction-row @(item.IsConfirmed ? "confirmed" : "unconfirmed")">

                                    @if (item.Type == TransactionType.Increase)
                                    {
                                        <td class="badge rounded-pill border border-success text-success">واریز</td>
                                    }
                                    else
                                    {
                                        <td class="badge rounded-pill border border-danger text-danger">برداشت</td>
                                    }

                                    <td>@DateHelper.ToShamsi(item.Createdate)</td>
                                    <td>@item.CreatTime.ToString("HH:mm")</td>
                                    <td>@item.Price.ToString("#,0") تومان</td>
                                    <td>@item.Description</td>

                                    <td>
                                        @if (item.IsConfirmed)
                                        {
                                            <button class="btn btn-success btn-xs disabled" disabled>تایید شده</button>
                                        }
                                        else
                                        {
                                            <button class="btn btn-success btn-xs task-action-btn"
                                                    onclick="handleConfirm(this, '@item.Id')">تایید نهایی
                                            </button>
                                            <a asp-controller="Home" asp-action="EditTransaction"
                                               asp-route-id="@item.Id"
                                               class="btn btn-warning btn-xs task-action-btn">ویرایش</a>
                                            <a asp-controller="Home" asp-action="DeleteTransaction"
                                               asp-route-id="@item.Id"
                                               class="btn btn-danger btn-xs task-action-btn"
                                               onclick="return confirmDelete();">حذف</a>
                                        }
                                    </td>
                                </tr>
                            }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>

<script>
    function handleConfirm(button, id) {
        if (!confirm("آیا مطمئن هستید که می‌خواهید تراکنش را تایید نهایی کنید؟")) return;

        const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

        const row = button.closest("tr");
        const editBtn = row.querySelector(".btn-warning");
        const deleteBtn = row.querySelector(".btn-danger");

        fetch('/Home/ConfirmTransaction', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
            },
            body: new URLSearchParams({
                '__RequestVerificationToken': token,
                'id': id
            })
        })
            .then(res => {
                if (res.ok) {

                    button.disabled = true;
                    button.innerText = "تایید شد";
                    button.classList.add("disabled");

                    editBtn.disabled = true;
                    editBtn.classList.add("disabled");

                    deleteBtn.disabled = true;
                    deleteBtn.classList.add("disabled");
                    location.reload();
                    alert("تراکنش با موفقیت تایید شد");
                } else {
                    alert("خطا در تایید تراکنش");
                }
            })
            .catch(err => {
                console.error("خطا:", err);
                alert("خطا در برقراری ارتباط با سرور");
            });
    }

    function filterTransactions() {
        const value = document.getElementById("filterStatus").value;
        const rows = document.querySelectorAll(".transaction-row");

        rows.forEach(row => {
            row.style.display = "table-row";

            if (value === "confirmed" && !row.classList.contains("confirmed")) {
                row.style.display = "none";
            } else if (value === "unconfirmed" && !row.classList.contains("unconfirmed")) {
                row.style.display = "none";
            }
        });
    }

    function confirmDelete() {
        return confirm("آیا از حذف تراکنش اطمینان دارید؟");
    }
</script>


